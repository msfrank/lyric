===========
Build Tasks
===========

.. contents:: Table of Contents
   :depth: 2

Each build task has a set of direct and inherited settings which are used to configure the task.

Task Domains
------------
.. contents::
   :local:

``analyze_module``
..................

:Task Id Format:            `RelativeModuleLocation`_
:Recognized Settings:       - `preludeLocation`_
:Generated Artifacts:       - `Outline`_


``compile_module``
..................

:Task Id Format:            `RelativeModuleLocation`_
:Recognized Settings:       - `envSymbolsPath`_
                            - `preludeLocation`_
                            - `touchExternalSymbols`_
:Generated Artifacts:       - `Object`_
                            - `Plugin`_

Compiles the source code for a module into a loadable object. compile_module declares a dependency
on parse_module and symbolize_module so that the module archetype and linkage artifacts are
available before the task runs. Once the archetype and linkage have been obtained, the task
proceeds in two sequential phases:

1. In phase one, the module linkage is scanned for relative imports. For each import a new
   analyze_module dependency is declared. If the module linkage requires a plugin, then a
   provide_plugin dependency is also declared.

1. In phase two, the module object is compiled from the module archetype, the module
   outlines generated by the analyze_module dependencies, and the optional plugin.

Once compilation has completed the module object and optional plugin are stored in the build
cache. The artifact path for the module object is the task id with the object file extension
applied to the last element of the path. The artifact path for the module plugin is the task
id with the platform id and platform shared library extension applied to the last element of
the path.

``parse_module``
................

:Task Id Format:            `RelativeModuleLocation`_
:Recognized Settings:       - `sourceBasePath`_
                            - `sourcePath`_
:Generated Artifacts:       - `Archetype`_


Task Id Formats
---------------
.. contents::
   :local:

``AbsoluteUrlPath``
...................


``AbsoluteFilesystemPath``
..........................


``AbsoluteUrl``
...............


``RelativeModuleLocation``
..........................


Task Settings
-------------
.. contents::
   :local:

``envSymbolsPath``
..................


``preludeLocation``
...................


``sourceBasePath``
..................


``sourcePath``
..............


``touchExternalSymbols``
........................


Task Artifacts
--------------
.. contents::
   :local:

``Archetype``
.............

``Linkage``
...........

``Object``
..........

:Metadata Attrs:
   .. table::
      :align: left

      ===============  ==============  =====
      Vocabulary       Id              Value
      ===============  ==============  =====
      lyric_build      ContentType     "application/vnd.lyric.object"
      lyric_build      CreateTime      timestamp when file was created, expressed in millis since the epoch
      lyric_build      ModuleLocation  url path specifying the relative module location
      lyric_build      InstallPath     unused
      ===============  ==============  =====

``Outline``
...........

``Plugin``
..........
